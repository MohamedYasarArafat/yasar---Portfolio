!(function (e) {
  "use strict";
  e('a.js-scroll-trigger[href*="#"]:not([href="#"])').click(function () {
    if (
      location.pathname.replace(/^\//, "") ==
        this.pathname.replace(/^\//, "") &&
      location.hostname == this.hostname
    ) {
      var t = e(this.hash);
      if ((t = t.length ? t : e("[name=" + this.hash.slice(1) + "]")).length)
        return (
          e("html, body").animate(
            { scrollTop: t.offset().top },
            1e3,
            "easeInOutExpo"
          ),
          !1
        );
    }
  }),
    e(".js-scroll-trigger").click(function () {
      e(".navbar-collapse").collapse("hide");
    }),
    e("body").scrollspy({ target: "#sideNav" });
})(jQuery);
function handleColor(event) {
  if (event.target.checked) {
    $("#sideNav").addClass("bg-primary1");
    document.body.style.backgroundColor = "#14213e";
    const e1 = document.querySelectorAll("h1");
    const e2 = document.querySelectorAll("h2");
    const e3 = document.querySelectorAll("h3");
    const e4 = document.querySelectorAll("h4");
    const e5 = document.querySelectorAll("h5");
    const e6 = document.querySelectorAll("h6");
    Array.from(e1).forEach((el) => (el.style.color = "#868e96"));
    Array.from(e2).forEach((el) => (el.style.color = "#868e96"));
    Array.from(e3).forEach((el) => (el.style.color = "#868e96"));
    Array.from(e4).forEach((el) => (el.style.color = "#868e96"));
    Array.from(e5).forEach((el) => (el.style.color = "#868e96"));
    Array.from(e6).forEach((el) => (el.style.color = "#868e96"));
  } else {
    $("#sideNav").removeClass("bg-primary1");
    document.body.style.backgroundColor = "#fff";
    const e1 = document.querySelectorAll("h1");
    const e2 = document.querySelectorAll("h2");
    const e3 = document.querySelectorAll("h3");
    const e4 = document.querySelectorAll("h4");
    const e5 = document.querySelectorAll("h5");
    const e6 = document.querySelectorAll("h6");
    Array.from(e1).forEach((el) => (el.style.color = "#343a40"));
    Array.from(e2).forEach((el) => (el.style.color = "#343a40"));
    Array.from(e3).forEach((el) => (el.style.color = "#343a40"));
    Array.from(e4).forEach((el) => (el.style.color = "#343a40"));
    Array.from(e5).forEach((el) => (el.style.color = "#343a40"));
    Array.from(e6).forEach((el) => (el.style.color = "#343a40"));
  }
}
// Home Graphics
particlesJS(
  "particles-js",

  {
    particles: {
      number: {
        value: 60,
        density: {
          enable: true,
          value_area: 1000,
        },
      },
      color: {
        value: "#cc7d62",
      },
      shape: {
        type: "circle",
        stroke: {
          width: 0,
          color: "#000000",
        },
        polygon: {
          nb_sides: 5,
        },
        image: {
          src: "img/github.svg",
          width: 100,
          height: 100,
        },
      },
      opacity: {
        value: 0.5,
        random: false,
        anim: {
          enable: false,
          speed: 1,
          opacity_min: 0.1,
          sync: false,
        },
      },
      size: {
        value: 5,
        random: true,
        anim: {
          enable: false,
          speed: 30,
          size_min: 0.1,
          sync: false,
        },
      },
      line_linked: {
        enable: true,
        distance: 200,
        color: "#cc7d62",
        opacity: 0.4,
        width: 1,
      },
      move: {
        enable: true,
        speed: 6,
        direction: "none",
        random: false,
        straight: false,
        out_mode: "out",
        attract: {
          enable: false,
          rotateX: 600,
          rotateY: 1200,
        },
      },
    },
    interactivity: {
      detect_on: "canvas",
      events: {
        onhover: {
          enable: true,
          mode: "repulse",
        },
        onclick: {
          enable: true,
          mode: "push",
        },
        resize: true,
      },
      modes: {
        grab: {
          distance: 400,
          line_linked: {
            opacity: 1,
          },
        },
        bubble: {
          distance: 400,
          size: 40,
          duration: 2,
          opacity: 8,
          speed: 3,
        },
        repulse: {
          distance: 200,
        },
        push: {
          particles_nb: 4,
        },
        remove: {
          particles_nb: 2,
        },
      },
    },
    retina_detect: true,
    config_demo: {
      hide_card: false,
      background_color: "#b61924",
      background_image: "",
      background_position: "50% 50%",
      background_repeat: "no-repeat",
      background_size: "cover",
    },
  }
);

// Home Text Animation

const words = ["Web Developer", "Programmer", "Engineer", "Coder"],
  colors = ["blue", "green", "yellow", "red"],
  text = document.querySelector(".text");

// Generator (iterate from 0-3)
function* generator() {
  var index = 0;
  while (true) {
    yield index++;

    if (index > 3) {
      index = 0;
    }
  }
}

// Printing effect
function printChar(word) {
  let i = 0;
  text.innerHTML = "";
  text.classList.add(colors[words.indexOf(word)]);
  let id = setInterval(() => {
    if (i >= word.length) {
      deleteChar();
      clearInterval(id);
    } else {
      text.innerHTML += word[i];
      i++;
    }
  }, 500);
}

// Deleting effect
function deleteChar() {
  let word = text.innerHTML;
  let i = word.length - 1;
  let id = setInterval(() => {
    if (i >= 0) {
      text.innerHTML = text.innerHTML.substring(0, text.innerHTML.length - 1);
      i--;
    } else {
      text.classList.remove(colors[words.indexOf(word)]);
      printChar(words[gen.next().value]);
      clearInterval(id);
    }
  }, 300);
}

// Initializing generator
let gen = generator();

printChar(words[gen.next().value]);

// menu animation
let blinkTextMenuLinks = document.querySelectorAll(".blink-text-menu li a");
blinkTextMenuLinks.forEach((link) => {
  let letters = link.textContent.split("");
  link.textContent = "";
  letters.forEach((letter, i) => {
    i += 1;
    let span = document.createElement("span");
    let delay = i / 20;
    if (i % 2 === 0) {
      delay -= 0.1;
    } else {
      delay += 0.05;
    }
    let letterOut = document.createElement("span");
    letterOut.textContent = letter;
    letterOut.style.transitionDelay = `${delay}s`;
    letterOut.classList.add("out");
    span.append(letterOut);
    let letterIn = document.createElement("span");
    letterIn.textContent = letter;
    letterIn.style.transitionDelay = `${delay}s`;
    letterIn.classList.add("in");
    span.append(letterIn);
    link.append(span);
  });
});

// Home Text animi

// Wrap every letter in a span
let textWrapper = document.querySelector(".ml9 .letters");
textWrapper.innerHTML = textWrapper.textContent.replace(
  /\S/g,
  "<span class='letter'>$&</span>"
);

anime
  .timeline({ loop: true })
  .add({
    targets: ".ml9 .letter",
    scale: [0, 1],
    duration: 1500,
    elasticity: 600,
    delay: (el, i) => 45 * (i + 1),
  })
  .add({
    targets: ".ml9",
    opacity: 0,
    duration: 1000,
    easing: "easeOutExpo",
    delay: 1000,
  });

let textWrapper2 = document.querySelector(".m1 .letters2");
if (textWrapper2)
  textWrapper2.innerHTML = textWrapper2?.textContent?.replace(
    /\S/g,
    "<span class='letter2'>$&</span>"
  );

anime
  .timeline({ loop: true })
  .add({
    targets: ".m1 .letters2",
    scale: [0, 1],
    duration: 1500,
    elasticity: 600,
    delay: (el, i) => 45 * (i + 1),
  })
  .add({
    targets: ".m1",
    opacity: 0,
    duration: 1000,
    easing: "easeOutExpo",
    delay: 1000,
  });

// about header text

// Wrap every letter in a span
let textWrapper1 = document.querySelector(".ml10 .letters");
textWrapper1.innerHTML = textWrapper1.textContent.replace(
  /\S/g,
  "<span class='letter'>$&</span>"
);

anime
  .timeline({ loop: true })
  .add({
    targets: ".ml10 .letter",
    rotateY: [-90, 0],
    duration: 1300,
    delay: (el, i) => 45 * i,
  })
  .add({
    targets: ".ml10",
    opacity: 0,
    duration: 1000,
    easing: "easeOutExpo",
    delay: 1000,
  });

anime
  .timeline({ loop: true })
  .add({
    targets: ".ml15 .word",
    scale: [14, 1],
    opacity: [0, 1],
    easing: "easeOutCirc",
    duration: 800,
    delay: (el, i) => 800 * i,
  })
  .add({
    targets: ".ml15",
    opacity: 0,
    duration: 1000,
    easing: "easeOutExpo",
    delay: 1000,
  });

//Chart js
var dom = document.getElementById("chart-container");
var myChart = echarts.init(dom, null, {
  renderer: "canvas",
  useDirtyRect: false,
});
var app = {};

var option;

option = {
  backgroundColor: "transparent",
  title: {
    text: "Workflow",
    left: "center",
    top: 20,
    textStyle: {
      color: "#868e96",
    },
  },
  tooltip: {
    trigger: "item",
    formatter: "{b}",
  },
  visualMap: {
    show: false,
    min: 80,
    max: 600,
    inRange: {
      colorLightness: [0, 1],
    },
  },
  series: [
    {
      name: "Access From",
      type: "pie",
      radius: "55%",
      center: ["50%", "50%"],
      data: [
        { value: 335, name: "Web Development" },
        { value: 310, name: "Responsive Design" },
        { value: 274, name: "Unit Testing" },
        { value: 235, name: "Debugging" },
        { value: 400, name: "Agile Development" },
      ].sort(function (a, b) {
        return a.value - b.value;
      }),
      roseType: "radius",
      label: {
        color: "#868e96",
      },
      labelLine: {
        lineStyle: {
          // color: "rgba(255, 255, 255, 0.3)",
        },
        smooth: 0.2,
        length: 10,
        length2: 20,
      },
      itemStyle: {
        color: "#c23531",
        shadowBlur: 200,
        shadowColor: "rgba(0, 0, 0, 0.5)",
      },
      animationType: "scale",
      animationEasing: "elasticOut",
      animationDelay: function (idx) {
        return Math.random() * 200;
      },
    },
  ],
};

if (option && typeof option === "object") {
  myChart.setOption(option);
}

window.addEventListener("resize", myChart.resize);
